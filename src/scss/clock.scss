//
// @author      OA Wu <comdan66@gmail.com>
// @copyright   Copyright (c) 2015 - 2021, Lalilo
// @license     http://opensource.org/licenses/MIT  MIT License
// @link        https://www.ioa.tw/
//

@use "sass:math";

@import "Lalilo";

@font-face { font-family: "icon"; src: url("../icon/icomoon/fonts/icomoon.eot?t=1612017672612") format("embedded-opentype"), url("../icon/icomoon/fonts/icomoon.woff?t=1612017672612") format("woff"), url("../icon/icomoon/fonts/icomoon.ttf?t=1612017672612") format("truetype"), url("../icon/icomoon/fonts/icomoon.svg?t=1612017672612") format("svg"); }
@font-face { font-family: "digital"; src: url("../icon/digital7/digital7mono.ttf?t=1612017672612") format("truetype"); }
@font-face { font-family: "digital2"; src: url("../icon/digital7/digital7.ttf?t=1612017672612") format("truetype"); }

%-icon {
  font-family: "icon";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
}

* {
  &, &:after, &:before {
    @include box-sizing(border-box);
    @include font-smoothing(subpixel-antialiased);
  }
}

body {
  position: relative;

  display: inline-block;
  width: 100%;

  margin: 0;
  padding: 0;
  color: rgba(90, 90, 90, 1.00);

  font-size: medium;
  text-align: center;
  font-family: "微軟正黑體", "Open sans", "Helvetica Neue", HelveticaNeue, Helvetica, Arial, sans-serif;
  
  background-color: rgba(255, 255, 255, 1.00);
}

#app {
  position: relative;
  width: 600px;
  height: 896px;
  background-color: rgba(0, 0, 0, 1.00);

  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  > * {
    position: absolute;
  }
}

#clock {
  left: 50%;
  top: 30px;

  $size: 540px;
  $numSize: 84px;

  width: $size;
  height: $size;
  display: inline-block;
  @include transform(translateX(-50%));

  > * {
    @include user-select(none);
    z-index: 2;
    position: absolute;
    display: inline-block;
  }

  &:after {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    display: inline-block;
    width: 11px;
    height: 11px;
    // border: 1px solid rgba(177, 40, 40, .4);
    background-color: rgba(177, 40, 40, .75);
    @include border-radius(50%);
    @include transform(translate(-50%, -50%));
    z-index: 10;
  }

  b {
    width: $numSize;
    height: $numSize;

    font-size: 50px;
    color: rgba(165, 156, 117, 1.00);
    @include transform(translate(-50%, -50%));

    &:before {
      position: absolute;
      left: 50%;
      top: 50%;
      font-family: Fraunces;
      @include transform(translate(-50%, -50%));
    }

    @for $i from 0 through 11 {
      &.n#{$i} {
        top: calc(50% - #{math.cos($i * 30deg) * ($size - $numSize - 16px) / 2});
        left: calc(50% + #{math.sin($i * 30deg) * ($size - $numSize - 16px) / 2});
        &:before { content: '#{($i + 11) % 12 + 1}'; }
      }
    }
  }

  i {
    background-color: rgba(204, 181, 111, 1.00);
    
    @for $i from 0 through 59 {
      &.n#{$i} {
        @include transform(translate(-50%, -50%) rotate($i * 6deg));

        @if $i % 5 == 0 {
          $h: 18px;
          height: $h;
          width: 10px;
          top: calc(50% - #{math.cos($i * 6deg) * ($size - $h + $h) / 2});
          left: calc(50% + #{math.sin($i * 6deg) * ($size - $h + $h) / 2});
          @include border-radius(10px / 2);
          @include opacity(1);
        } @else {
          $h: 8px;
          height: $h;
          width: 8px;
          top: calc(50% - #{math.cos($i * 6deg) * ($size - $h) / 2});
          left: calc(50% + #{math.sin($i * 6deg) * ($size - $h) / 2});
          @include border-radius(50%);
          @include opacity(.6);
        }
      }
    }
  }

  u {
    position: absolute;
    display: inline-block;
    z-index: 3;
    @include rotate(0);
    @include transition(none);
    @include box-shadow(0 0 3px 1px rgba(0, 0, 0, .5));
    
    @for $i from 0 through 60 {
      &.n#{$i} {
        @include rotate(#{$i * 6deg});
      }
    }
    &.ani {
      @include transition(transform .5s cubic-bezier(.11, 1.45, .46, .94));
    }
    &:after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      display: inline-block;
      background-color: rgba(255, 255, 255, .5);
      @include transform(translateX(-50%));
      @include border-radius(50%);
    }
    
    &.s {
      $width: 8px;
      $padding: 60px;
      $over: 20px;
      $color: rgba(213, 79, 61, 1.00);

      width: $width;
      height: calc(50% + #{$width / 2 - $padding + $over});
      left: calc(50% - #{$width / 2});
      bottom: calc(50% - #{$width / 2 + $over});
      background-color: $color;
      @include border-radius($width / 2);
      @include transform-origin(center, calc(100% - #{$width / 2 + $over}));

      &:after {
        width: 20px;
        height: 20px;
        bottom: $over + $width / 2 - 20px / 2;
        background-color: rgba(213, 79, 61, 1.00);
      }
    }
    &.m {
      $width: 12px;
      $padding: 90px;
      $over: 24px;
      $color: rgba(207, 181, 120, 1.00);

      width: $width;
      height: calc(50% + #{$width / 2 - $padding + $over});
      left: calc(50% - #{$width / 2});
      bottom: calc(50% - #{$width / 2 + $over});
      background-color: $color;
      @include border-radius($width / 2);
      @include transform-origin(center, calc(100% - #{$width / 2 + $over}));

      &:after {
        width: 30px;
        height: 30px;
        bottom: $over + $width / 2 - 30px / 2;
        background-color: $color;
      }
    }
    &.h {
      $width: 16px;
      $padding: 120px;
      $over: 28px;
      $color: rgba(168, 144, 96, 1.00);

      width: $width;
      height: calc(50% + #{$width / 2 - $padding + $over});
      left: calc(50% - #{$width / 2});
      bottom: calc(50% - #{$width / 2 + $over});
      background-color: $color;
      @include border-radius($width / 2);
      @include transform-origin(center, calc(100% - #{$width / 2 + $over}));

      &:after {
        width: 40px;
        height: 40px;
        bottom: $over + $width / 2 - 40px / 2;
        background-color: $color;
      }
    }
  }
}

#app.full {
  #screen:before {
    content: '退出螢幕';
  }
}

#screen {
  bottom: 20px;
  left: 50%;

  display: inline-block;
  padding: 4px 12px;
  cursor: pointer;
  @include user-select(none);
  @include border-radius(4px);
  color: white;
  background-color: rgba(0, 123, 255, 1.00);
  border: 1px solid rgba(0, 123, 255, 1.00);
  @include transition(background-color .3s, border-color .3s);
  @include transform(translateX(-50%));
  
  
  &:before {
    content: '使用螢幕';
  }
  
  &:hover {
    border-color: rgba(0, 98, 204, 1.00);
    background-color: rgba(0, 105, 217, 1.00);
  }
}


#digital {
  // right: 8px;
  left: 50%;
  top: 30px + 540px + 50px;
  // border: 1px solid rgba(255, 255, 255, 1);
  width: 280px;
  height: 140px;
  line-height: 140px;
  $color: rgba(93, 232, 159, 1.00);
  @include transform(translateX(-50%));
  
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  i {
    position: absolute;
    left: -32px;
    top: -4px;
    display: inline-block;
    width: 44px;
    height: 44px;
    line-height: 44px;
    font-size: 30px;

    color: rgba(176, 143, 0, 1.00);
    &:before {
      @extend %-icon;
      content: "\f001";
    }
    &.n {
      font-size: 50px;
      color: rgba(255, 255, 255, .65);
      &:before {
        content: "\f002";
      }
    }
  }
  span {
    height: 100%;
    color: white;
    font-size: 120px;
    letter-spacing: 2px;
    width: calc(100% / 4 - 20px / 4);
    flex-shrink: 0;
    font-family: 'digital';
    color: $color;
    @include opacity(.75);
    
    &:nth-child(1), &:nth-child(4) {
      text-align: right;
    }
    &:nth-child(2), &:nth-child(5) {
      text-align: left;
    }
    &:nth-child(3) {
      width: 20px;
      font-family: 'digital2';
      @include animation(opacity 2s linear infinite);
    }
  }
}

@include keyframes(opacity) {
  0% { @include opacity(.25); }
  40% { @include opacity(.85); }
  60% { @include opacity(.85); }
  100% { @include opacity(.25); }
}